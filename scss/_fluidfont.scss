@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@function calcFluidFontSize($f-min, $f-max, $w-min, $w-max, $units: px) {
  $f-min: strip-unit($f-min);
  $f-max: strip-unit($f-max);
  $w-min: strip-unit($w-min);
  $w-max: strip-unit($w-max);
  
	$k: ($f-max - $f-min)/($w-max - $w-min);
	$b: $f-min - $k * $w-min;

	$b: $b + $units;

	@return calc( #{$k} * 100vw + #{$b} );
}

@mixin fluidFontSize($f-min, $f-max, $w-min, $w-max, $fallback: false) {
  
  font-size: $f-min;
  
  @media (min-width: $w-min) {
    @if ($fallback) {
      font-size: $fallback;
    }
    font-size: calcFluidFontSize($f-min, $f-max, $w-min, $w-max, px);  
  }
  @media (min-width: $w-max) {
    font-size: $f-max;
  }
}

.fluid-font-size {
  @include fluidFontSize(20px, 40px, 480px, 1280px, 18px);
}
p {
  @include fluidFontSize(12px, 19px, 420px, 1200px, 16px);
}

/*при ширине экрана меньше 480px шрифт всегда будет 16px
после 480 он станет резиновым
а после 1280px всегда будет 24px.*/

/*
if width <= 480px font-size = 16px;
40 is max font-size
if width > 480px  font-size will responsive;
if width >= 1280px font-size always = 18px;
при ширине экрана меньше 480px шрифт всегда будет 16px
после 480 он станет резиновым
а после 1280px всегда будет 18px.*/